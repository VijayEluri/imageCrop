<?xml version="1.0" encoding="utf-8"?>
<project name="imageCrop" basedir="." default="dist">
	<description>Build the imageCrop project</description>

	<property name="version.number" value="2" />
	<property name="src.dir" value="src" />
	<property name="bin.dir" value="bin-dist" />
	<property name="dist.dir" value="dist" />
	<property name="lib.dir" value="lib" />
	<property name="test.dir" value="test" />
	<property name="bin.test.dir" value="bin-test" />

	<path id="classpath.base">
		<fileset dir="${lib.dir}">
			<include name="*.jar" />
			<exclude name="morena_license.jar" />
			<exclude name="junit-*.jar" />
		</fileset>
	</path>

	<path id="classpath.test">
		<path refid="classpath.base" />
		<fileset dir="${lib.dir}" includes="junit-*.jar" />
		<pathelement location="${bin.dir}" />
	</path>
	
	<path id="classpath.package">
		<path refid="classpath.base" />
		<pathelement location="${lib.dir}/morena_license.jar" />
	</path>

	
	<!-- IVY DEPENDENCIES TARGETS -->
	<import file="build-dependencies.xml" />
	
	<!-- COBERTURA CODE COVERAGE TARGETS -->
	<import file="build-codeCoverage.xml" />
	

	<target name="cleanBin" description="Clean the binary directory">
		<delete includeemptydirs="true" quiet="true" defaultexcludes="false">
			<fileset dir="${bin.dir}" includes="**" />
		</delete>
	</target>

	<target name="cleanBinTest" description="Clean the test directory">
		<delete includeemptydirs="true" quiet="true" defaultexcludes="false">
			<fileset dir="${bin.test.dir}" includes="**" />
		</delete>
	</target>

	<target name="cleanDist" description="Clean the dist directory">
		<delete includeemptydirs="true" quiet="true" defaultexcludes="false">
			<fileset dir="${dist.dir}" includes="**" />
		</delete>
	</target>
	
	<target name="clean" description="clean all generated files and directories">
		<antcall target="cleanBin" />
		<antcall target="cleanBinTest" />
		<antcall target="cleanDist" />
		<antcall target="codeCoverage.coberturaClean" />
	</target>

	<target name="compile" description="Compile the source files, targeting the VM version 1.6"
			depends="resolveDeps, cleanBin">

		<!-- initialize the bin directory -->
		<mkdir dir="${bin.dir}" />

		<!-- and compile against the VM version 1.6 which is needed by the substance L&F -->
		<javac srcdir="${src.dir}" destdir="${bin.dir}" source="1.6" target="1.6" includeAntRuntime="false">
			<classpath refid="classpath.base" />
		</javac>
	</target>

	<target name="compileTest" depends="compile, cleanBinTest" unless="skipTests">
		<!-- initialize the bin-test directory -->
		<mkdir dir="${bin.test.dir}" />

		<javac srcdir="${test.dir}" destdir="${bin.test.dir}" source="1.6" target="1.6">
			<classpath refid="classpath.test" />
		</javac>
	</target>

	<target name="test" depends="compileTest" unless="skipTests">
		<junit printsummary="yes" showoutput="true" failureproperty="junit.failure">
			<classpath refid="classpath.test" />
			<classpath path="${bin.test.dir}" />
			<formatter type="brief" usefile="false" />
			<batchtest>
				<fileset dir="${bin.test.dir}" includes="**/*Test.class" />
			</batchtest>
		</junit>
	</target>

	<target name="jar" description="Build the jar file to include the binaries"
			depends="test, cleanDist">
		
		<!-- use cobertura to generate the unit test and the code coverage html reports -->
		<antcall target="codeCoverage.coberturaClean" />
		<antcall target="codeCoverage.coberturaTest" />
		<antcall target="codeCoverage.coberturaAlternate-coverage-report" />
		
		
		<!-- initialize the dist directory -->
		<mkdir dir="${dist.dir}" />

		<!-- and convert it to a flat list/string for use in manifest task -->
		<pathconvert property="mf.classpath" pathsep=" lib/">
			<path refid="classpath.package" />
			<flattenmapper />
		</pathconvert>

		<!-- initialize the build number -->
		<buildnumber file="buildNumber.txt" />

		<!-- create a MANIFEST.MF file -->
		<tstamp />
		<!-- needed for TODAY -->
		<manifest file="MANIFEST.MF">
			<attribute name="Built-By" value="${user.name}" />
			<attribute name="Created-By" value="${user.name}" />
			<attribute name="Main-Class" value="com.alexalecu.imageCrop.ImageCropControl" />
			<attribute name="Implementation-Version" value="${version.number}-b${build.number}" />
			<attribute name="Built-Date" value="${TODAY}" />
			<attribute name="Class-Path" value="${lib.dir}/${mf.classpath}" />
		</manifest>

		<!-- build the JAR file to include all the binaries -->
		<jar destfile="${dist.dir}/imageCrop.jar" basedir="${bin.dir}" compress="yes" level="7" manifest="MANIFEST.MF" />

		<!-- and delete the manifest file -->
		<delete file="MANIFEST.MF" />
	</target>

	<target name="dist" description="Build a binary distribution of the project" depends="jar">
		<!-- copy the needed libraries and resources -->
		<copy todir="${dist.dir}">
			<fileset dir=".">
				<include name="img/**" />
				<include name="props/**" />
			</fileset>
		</copy>
		<copy todir="${dist.dir}/lib" flatten="true">
			<path refid="classpath.package" />
		</copy>

		<!-- create the starter batch / shell files -->
		<echo file="${dist.dir}/imageCrop.sh">java -jar imageCrop.jar</echo>
		<echo file="${dist.dir}/imageCrop.bat">java -jar imageCrop.jar</echo>

		<antcall target="cleanBin" />
		<antcall target="cleanBinTest" />
	</target>
	
</project>
