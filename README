ImageCrop v2.2


DESCRIPTION
===========
The application auto selects images of maximum size from within an outer image.
It then gives you the option to crop, rotate or save the selection.
It can be used on images containing multiple scanned items at once.

For first time users: start the wizard by clicking the 'Start wizard' button.
It will guide you through the process.

There are two test image in '/test/resources'. You can use them to familiarize
yourself with the application capabilities.


BUILD THE APPLICATION
=====================
You need Ant 1.8+ and Apache Ivy 2.0+ to build the application.
Execute
	$ ant -f build-dependencies.xml
	$ ant
inside the project main directory to build a release - a new 'dist' directory
will be created; inside it you will find all the files needed to run the
application.
The code coverage tool is executed and the unit testing and code coverage html
reports are generated in 'bin-cobertura/reports/*-html' directories.


RUN THE APPLICATION
===================
You need Java 6+ to run the application. Depending on your OS, execute either
    $ bash start.sh
or
    > start.bat
to start the application.


GENERATING THE UNIT TESTING & CODE COVERAGE REPORTS
===================================================
Execute
	$ ant codeCoverage.coberturaClean codeCoverage.coberturaTest \
			codeCoverage.coberturaAlternate-coverage-report
to generate the unit testing and code coverage HTML reports in the following
two directories:
	bin-cobertura/reports/junit-html and
	bin-cobertura/reports/junit-xml


CONTACT INFO AND LATEST VERSION
===============================
For the contact info and the latest version of the application, check out
    https://github.com/alexcojocaru/imageCrop


REFERENCES
==========
The application uses and references (see the AutoSelectTask and ImageKit files)
algorithms and methods described in the following articles and web sites:
    Computing the largest orthogonal rectangle in a convex polygon:
    http://cgm.cs.mcgill.ca/~athens/cs507/Projects/2003/DanielSud/complete.html

    Image manipulation library:
    http://www.generation5.org/jdk/

    Hough image manipulation example:
    http://www-dsp.elet.polimi.it/ispg/eti/laboratorio/sessioni/hough/HoughSplit.htm

The data binding model (i.e. the notification mechanism) is based on the idea
described in the following article:
	http://java.dzone.com/articles/better-data-binding-model
